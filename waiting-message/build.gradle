plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'waiting-message'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // spring cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.3.0'

    // lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor('org.projectlombok:lombok')

    // local db
    runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:kafka-clients'

    // monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    implementation 'com.github.loki4j:loki-logback-appender:1.6.0'

    implementation 'io.micrometer:micrometer-tracing-bridge-brave'

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation project(':waiting-kafka')
}

tasks.named('test') {
    useJUnitPlatform()
}
