plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// spring cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.3.0'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.3.0'

	// lombok
	implementation 'org.projectlombok:lombok'
	annotationProcessor('org.projectlombok:lombok')

	// local db
	runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.kafka:kafka-clients'

	// monitoring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	implementation 'com.github.loki4j:loki-logback-appender:1.6.0'

	implementation 'io.micrometer:micrometer-tracing-bridge-brave'

	// dummy
	implementation 'org.springframework:spring-jdbc:7.0.0-M8'
	implementation 'net.datafaker:datafaker:2.4.4'

	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation project(':waiting-common')
	implementation project(':waiting-redis')
}

tasks.named('test') {
	useJUnitPlatform()
}
