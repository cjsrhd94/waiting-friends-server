plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // spring cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.3.0'

    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    // json
    implementation 'org.json:json:20250107'

    // lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor('org.projectlombok:lombok')

    // local db
    runtimeOnly 'com.mysql:mysql-connector-j:8.0.33'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    implementation 'com.github.loki4j:loki-logback-appender:1.6.0'

    implementation 'io.micrometer:micrometer-tracing-bridge-brave'

    //TSID
    implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.11.0'
    implementation 'com.github.f4b6a3:tsid-creator:5.2.6'

    // ULID
    implementation 'com.github.f4b6a3:ulid-creator:5.2.3'

    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation project(':waiting-common')
    implementation project(':waiting-redis')
}

tasks.named('test') {
    useJUnitPlatform()
}
